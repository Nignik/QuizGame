// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Packets.proto

#include "src/Packets.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ServerVerdict::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : answer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        correct_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerVerdict::ServerVerdict(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerVerdictDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerVerdictDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerVerdictDefaultTypeInternal() {}
  union {
    ServerVerdict _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerVerdictDefaultTypeInternal _ServerVerdict_default_instance_;

inline constexpr ServerQuestion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : question_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerQuestion::ServerQuestion(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerQuestionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerQuestionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerQuestionDefaultTypeInternal() {}
  union {
    ServerQuestion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerQuestionDefaultTypeInternal _ServerQuestion_default_instance_;

inline constexpr ClientConnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientConnect::ClientConnect(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientConnectDefaultTypeInternal() {}
  union {
    ClientConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientConnectDefaultTypeInternal _ClientConnect_default_instance_;

inline constexpr ClientAnswer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        answer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientAnswer::ClientAnswer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientAnswerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientAnswerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientAnswerDefaultTypeInternal() {}
  union {
    ClientAnswer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientAnswerDefaultTypeInternal _ClientAnswer_default_instance_;

inline constexpr MessageEnvelope::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::MessageEnvelope_MessageType >(0)},
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MessageEnvelope::MessageEnvelope(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageEnvelopeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageEnvelopeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageEnvelopeDefaultTypeInternal() {}
  union {
    MessageEnvelope _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageEnvelopeDefaultTypeInternal _MessageEnvelope_default_instance_;
static ::_pb::Metadata file_level_metadata_src_2fPackets_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_src_2fPackets_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_src_2fPackets_2eproto = nullptr;
const ::uint32_t TableStruct_src_2fPackets_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ClientConnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientConnect, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ClientAnswer, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientAnswer, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ClientAnswer, _impl_.answer_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ServerQuestion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ServerQuestion, _impl_.question_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ServerVerdict, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ServerVerdict, _impl_.answer_),
    PROTOBUF_FIELD_OFFSET(::ServerVerdict, _impl_.correct_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MessageEnvelope, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::MessageEnvelope, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MessageEnvelope, _impl_.type_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::MessageEnvelope, _impl_.payload_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ClientConnect)},
        {9, -1, -1, sizeof(::ClientAnswer)},
        {19, -1, -1, sizeof(::ServerQuestion)},
        {28, -1, -1, sizeof(::ServerVerdict)},
        {38, -1, -1, sizeof(::MessageEnvelope)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_ClientConnect_default_instance_._instance,
    &::_ClientAnswer_default_instance_._instance,
    &::_ServerQuestion_default_instance_._instance,
    &::_ServerVerdict_default_instance_._instance,
    &::_MessageEnvelope_default_instance_._instance,
};
const char descriptor_table_protodef_src_2fPackets_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021src/Packets.proto\"\035\n\rClientConnect\022\014\n\004"
    "name\030\001 \001(\t\",\n\014ClientAnswer\022\014\n\004name\030\001 \001(\t"
    "\022\016\n\006answer\030\002 \001(\t\"\"\n\016ServerQuestion\022\020\n\010qu"
    "estion\030\001 \001(\t\"0\n\rServerVerdict\022\016\n\006answer\030"
    "\001 \001(\t\022\017\n\007correct\030\002 \001(\010\"\313\002\n\017MessageEnvelo"
    "pe\022*\n\004type\030\001 \001(\0162\034.MessageEnvelope.Messa"
    "geType\022\'\n\rclientConnect\030\002 \001(\0132\016.ClientCo"
    "nnectH\000\022%\n\014clientAnswer\030\003 \001(\0132\r.ClientAn"
    "swerH\000\022)\n\016serverQuestion\030\004 \001(\0132\017.ServerQ"
    "uestionH\000\022\'\n\rserverVerdict\030\005 \001(\0132\016.Serve"
    "rVerdictH\000\"]\n\013MessageType\022\022\n\016CLIENT_CONN"
    "ECT\020\000\022\021\n\rCLIENT_ANSWER\020\001\022\023\n\017SERVER_QUEST"
    "ION\020\002\022\022\n\016SERVER_VERDICT\020\003B\t\n\007payloadb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_src_2fPackets_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_src_2fPackets_2eproto = {
    false,
    false,
    524,
    descriptor_table_protodef_src_2fPackets_2eproto,
    "src/Packets.proto",
    &descriptor_table_src_2fPackets_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_src_2fPackets_2eproto::offsets,
    file_level_metadata_src_2fPackets_2eproto,
    file_level_enum_descriptors_src_2fPackets_2eproto,
    file_level_service_descriptors_src_2fPackets_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_src_2fPackets_2eproto_getter() {
  return &descriptor_table_src_2fPackets_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_src_2fPackets_2eproto(&descriptor_table_src_2fPackets_2eproto);
const ::google::protobuf::EnumDescriptor* MessageEnvelope_MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2fPackets_2eproto);
  return file_level_enum_descriptors_src_2fPackets_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageEnvelope_MessageType_internal_data_[] = {
    262144u, 0u, };
bool MessageEnvelope_MessageType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MessageEnvelope_MessageType MessageEnvelope::CLIENT_CONNECT;
constexpr MessageEnvelope_MessageType MessageEnvelope::CLIENT_ANSWER;
constexpr MessageEnvelope_MessageType MessageEnvelope::SERVER_QUESTION;
constexpr MessageEnvelope_MessageType MessageEnvelope::SERVER_VERDICT;
constexpr MessageEnvelope_MessageType MessageEnvelope::MessageType_MIN;
constexpr MessageEnvelope_MessageType MessageEnvelope::MessageType_MAX;
constexpr int MessageEnvelope::MessageType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ClientConnect::_Internal {
 public:
};

ClientConnect::ClientConnect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientConnect)
}
inline PROTOBUF_NDEBUG_INLINE ClientConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

ClientConnect::ClientConnect(
    ::google::protobuf::Arena* arena,
    const ClientConnect& from)
    : ::google::protobuf::Message(arena) {
  ClientConnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ClientConnect)
}
inline PROTOBUF_NDEBUG_INLINE ClientConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void ClientConnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientConnect::~ClientConnect() {
  // @@protoc_insertion_point(destructor:ClientConnect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientConnect::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientConnect)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientConnect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> ClientConnect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ClientConnect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientConnect, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ClientConnect, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "ClientConnect"
    "name"
  }},
};

::uint8_t* ClientConnect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientConnect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ClientConnect.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientConnect)
  return target;
}

::size_t ClientConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientConnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientConnect::_class_data_ = {
    ClientConnect::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientConnect::GetClassData() const {
  return &_class_data_;
}

void ClientConnect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientConnect*>(&to_msg);
  auto& from = static_cast<const ClientConnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientConnect::CopyFrom(const ClientConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientConnect::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientConnect::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientConnect::InternalSwap(ClientConnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata ClientConnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fPackets_2eproto_getter, &descriptor_table_src_2fPackets_2eproto_once,
      file_level_metadata_src_2fPackets_2eproto[0]);
}
// ===================================================================

class ClientAnswer::_Internal {
 public:
};

ClientAnswer::ClientAnswer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientAnswer)
}
inline PROTOBUF_NDEBUG_INLINE ClientAnswer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        answer_(arena, from.answer_),
        _cached_size_{0} {}

ClientAnswer::ClientAnswer(
    ::google::protobuf::Arena* arena,
    const ClientAnswer& from)
    : ::google::protobuf::Message(arena) {
  ClientAnswer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ClientAnswer)
}
inline PROTOBUF_NDEBUG_INLINE ClientAnswer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        answer_(arena),
        _cached_size_{0} {}

inline void ClientAnswer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientAnswer::~ClientAnswer() {
  // @@protoc_insertion_point(destructor:ClientAnswer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientAnswer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.answer_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientAnswer::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientAnswer)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.answer_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientAnswer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> ClientAnswer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ClientAnswer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string answer = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClientAnswer, _impl_.answer_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientAnswer, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ClientAnswer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string answer = 2;
    {PROTOBUF_FIELD_OFFSET(ClientAnswer, _impl_.answer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\6\0\0\0\0\0"
    "ClientAnswer"
    "name"
    "answer"
  }},
};

::uint8_t* ClientAnswer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientAnswer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ClientAnswer.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string answer = 2;
  if (!this->_internal_answer().empty()) {
    const std::string& _s = this->_internal_answer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ClientAnswer.answer");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientAnswer)
  return target;
}

::size_t ClientAnswer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientAnswer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string answer = 2;
  if (!this->_internal_answer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_answer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientAnswer::_class_data_ = {
    ClientAnswer::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientAnswer::GetClassData() const {
  return &_class_data_;
}

void ClientAnswer::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientAnswer*>(&to_msg);
  auto& from = static_cast<const ClientAnswer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientAnswer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_answer().empty()) {
    _this->_internal_set_answer(from._internal_answer());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientAnswer::CopyFrom(const ClientAnswer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientAnswer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientAnswer::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientAnswer::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientAnswer::InternalSwap(ClientAnswer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.answer_, &other->_impl_.answer_, arena);
}

::google::protobuf::Metadata ClientAnswer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fPackets_2eproto_getter, &descriptor_table_src_2fPackets_2eproto_once,
      file_level_metadata_src_2fPackets_2eproto[1]);
}
// ===================================================================

class ServerQuestion::_Internal {
 public:
};

ServerQuestion::ServerQuestion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerQuestion)
}
inline PROTOBUF_NDEBUG_INLINE ServerQuestion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : question_(arena, from.question_),
        _cached_size_{0} {}

ServerQuestion::ServerQuestion(
    ::google::protobuf::Arena* arena,
    const ServerQuestion& from)
    : ::google::protobuf::Message(arena) {
  ServerQuestion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ServerQuestion)
}
inline PROTOBUF_NDEBUG_INLINE ServerQuestion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : question_(arena),
        _cached_size_{0} {}

inline void ServerQuestion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerQuestion::~ServerQuestion() {
  // @@protoc_insertion_point(destructor:ServerQuestion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerQuestion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.question_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerQuestion::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerQuestion)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.question_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerQuestion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 31, 2> ServerQuestion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServerQuestion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string question = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerQuestion, _impl_.question_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string question = 1;
    {PROTOBUF_FIELD_OFFSET(ServerQuestion, _impl_.question_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\10\0\0\0\0\0\0"
    "ServerQuestion"
    "question"
  }},
};

::uint8_t* ServerQuestion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerQuestion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string question = 1;
  if (!this->_internal_question().empty()) {
    const std::string& _s = this->_internal_question();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerQuestion.question");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerQuestion)
  return target;
}

::size_t ServerQuestion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerQuestion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string question = 1;
  if (!this->_internal_question().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_question());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerQuestion::_class_data_ = {
    ServerQuestion::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerQuestion::GetClassData() const {
  return &_class_data_;
}

void ServerQuestion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerQuestion*>(&to_msg);
  auto& from = static_cast<const ServerQuestion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerQuestion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_question().empty()) {
    _this->_internal_set_question(from._internal_question());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerQuestion::CopyFrom(const ServerQuestion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerQuestion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerQuestion::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerQuestion::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerQuestion::InternalSwap(ServerQuestion* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.question_, &other->_impl_.question_, arena);
}

::google::protobuf::Metadata ServerQuestion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fPackets_2eproto_getter, &descriptor_table_src_2fPackets_2eproto_once,
      file_level_metadata_src_2fPackets_2eproto[2]);
}
// ===================================================================

class ServerVerdict::_Internal {
 public:
};

ServerVerdict::ServerVerdict(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ServerVerdict)
}
inline PROTOBUF_NDEBUG_INLINE ServerVerdict::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : answer_(arena, from.answer_),
        _cached_size_{0} {}

ServerVerdict::ServerVerdict(
    ::google::protobuf::Arena* arena,
    const ServerVerdict& from)
    : ::google::protobuf::Message(arena) {
  ServerVerdict* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.correct_ = from._impl_.correct_;

  // @@protoc_insertion_point(copy_constructor:ServerVerdict)
}
inline PROTOBUF_NDEBUG_INLINE ServerVerdict::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : answer_(arena),
        _cached_size_{0} {}

inline void ServerVerdict::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.correct_ = {};
}
ServerVerdict::~ServerVerdict() {
  // @@protoc_insertion_point(destructor:ServerVerdict)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerVerdict::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.answer_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerVerdict::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerVerdict)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.answer_.ClearToEmpty();
  _impl_.correct_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerVerdict::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 28, 2> ServerVerdict::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServerVerdict_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool correct = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServerVerdict, _impl_.correct_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ServerVerdict, _impl_.correct_)}},
    // string answer = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerVerdict, _impl_.answer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string answer = 1;
    {PROTOBUF_FIELD_OFFSET(ServerVerdict, _impl_.answer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool correct = 2;
    {PROTOBUF_FIELD_OFFSET(ServerVerdict, _impl_.correct_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\15\6\0\0\0\0\0\0"
    "ServerVerdict"
    "answer"
  }},
};

::uint8_t* ServerVerdict::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerVerdict)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string answer = 1;
  if (!this->_internal_answer().empty()) {
    const std::string& _s = this->_internal_answer();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ServerVerdict.answer");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool correct = 2;
  if (this->_internal_correct() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_correct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerVerdict)
  return target;
}

::size_t ServerVerdict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerVerdict)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string answer = 1;
  if (!this->_internal_answer().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_answer());
  }

  // bool correct = 2;
  if (this->_internal_correct() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerVerdict::_class_data_ = {
    ServerVerdict::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerVerdict::GetClassData() const {
  return &_class_data_;
}

void ServerVerdict::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerVerdict*>(&to_msg);
  auto& from = static_cast<const ServerVerdict&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ServerVerdict)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_answer().empty()) {
    _this->_internal_set_answer(from._internal_answer());
  }
  if (from._internal_correct() != 0) {
    _this->_internal_set_correct(from._internal_correct());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerVerdict::CopyFrom(const ServerVerdict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerVerdict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerVerdict::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerVerdict::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerVerdict::InternalSwap(ServerVerdict* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.answer_, &other->_impl_.answer_, arena);
        swap(_impl_.correct_, other->_impl_.correct_);
}

::google::protobuf::Metadata ServerVerdict::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fPackets_2eproto_getter, &descriptor_table_src_2fPackets_2eproto_once,
      file_level_metadata_src_2fPackets_2eproto[3]);
}
// ===================================================================

class MessageEnvelope::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::MessageEnvelope, _impl_._oneof_case_);
  static const ::ClientConnect& clientconnect(const MessageEnvelope* msg);
  static const ::ClientAnswer& clientanswer(const MessageEnvelope* msg);
  static const ::ServerQuestion& serverquestion(const MessageEnvelope* msg);
  static const ::ServerVerdict& serververdict(const MessageEnvelope* msg);
};

const ::ClientConnect& MessageEnvelope::_Internal::clientconnect(const MessageEnvelope* msg) {
  return *msg->_impl_.payload_.clientconnect_;
}
const ::ClientAnswer& MessageEnvelope::_Internal::clientanswer(const MessageEnvelope* msg) {
  return *msg->_impl_.payload_.clientanswer_;
}
const ::ServerQuestion& MessageEnvelope::_Internal::serverquestion(const MessageEnvelope* msg) {
  return *msg->_impl_.payload_.serverquestion_;
}
const ::ServerVerdict& MessageEnvelope::_Internal::serververdict(const MessageEnvelope* msg) {
  return *msg->_impl_.payload_.serververdict_;
}
void MessageEnvelope::set_allocated_clientconnect(::ClientConnect* clientconnect) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (clientconnect) {
    ::google::protobuf::Arena* submessage_arena = clientconnect->GetArena();
    if (message_arena != submessage_arena) {
      clientconnect = ::google::protobuf::internal::GetOwnedMessage(message_arena, clientconnect, submessage_arena);
    }
    set_has_clientconnect();
    _impl_.payload_.clientconnect_ = clientconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageEnvelope.clientConnect)
}
void MessageEnvelope::set_allocated_clientanswer(::ClientAnswer* clientanswer) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (clientanswer) {
    ::google::protobuf::Arena* submessage_arena = clientanswer->GetArena();
    if (message_arena != submessage_arena) {
      clientanswer = ::google::protobuf::internal::GetOwnedMessage(message_arena, clientanswer, submessage_arena);
    }
    set_has_clientanswer();
    _impl_.payload_.clientanswer_ = clientanswer;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageEnvelope.clientAnswer)
}
void MessageEnvelope::set_allocated_serverquestion(::ServerQuestion* serverquestion) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (serverquestion) {
    ::google::protobuf::Arena* submessage_arena = serverquestion->GetArena();
    if (message_arena != submessage_arena) {
      serverquestion = ::google::protobuf::internal::GetOwnedMessage(message_arena, serverquestion, submessage_arena);
    }
    set_has_serverquestion();
    _impl_.payload_.serverquestion_ = serverquestion;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageEnvelope.serverQuestion)
}
void MessageEnvelope::set_allocated_serververdict(::ServerVerdict* serververdict) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (serververdict) {
    ::google::protobuf::Arena* submessage_arena = serververdict->GetArena();
    if (message_arena != submessage_arena) {
      serververdict = ::google::protobuf::internal::GetOwnedMessage(message_arena, serververdict, submessage_arena);
    }
    set_has_serververdict();
    _impl_.payload_.serververdict_ = serververdict;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageEnvelope.serverVerdict)
}
MessageEnvelope::MessageEnvelope(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MessageEnvelope)
}
inline PROTOBUF_NDEBUG_INLINE MessageEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MessageEnvelope::MessageEnvelope(
    ::google::protobuf::Arena* arena,
    const MessageEnvelope& from)
    : ::google::protobuf::Message(arena) {
  MessageEnvelope* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kClientConnect:
        _impl_.payload_.clientconnect_ = CreateMaybeMessage<::ClientConnect>(arena, *from._impl_.payload_.clientconnect_);
        break;
      case kClientAnswer:
        _impl_.payload_.clientanswer_ = CreateMaybeMessage<::ClientAnswer>(arena, *from._impl_.payload_.clientanswer_);
        break;
      case kServerQuestion:
        _impl_.payload_.serverquestion_ = CreateMaybeMessage<::ServerQuestion>(arena, *from._impl_.payload_.serverquestion_);
        break;
      case kServerVerdict:
        _impl_.payload_.serververdict_ = CreateMaybeMessage<::ServerVerdict>(arena, *from._impl_.payload_.serververdict_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:MessageEnvelope)
}
inline PROTOBUF_NDEBUG_INLINE MessageEnvelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MessageEnvelope::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
MessageEnvelope::~MessageEnvelope() {
  // @@protoc_insertion_point(destructor:MessageEnvelope)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessageEnvelope::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void MessageEnvelope::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:MessageEnvelope)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kClientConnect: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.clientconnect_;
      }
      break;
    }
    case kClientAnswer: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.clientanswer_;
      }
      break;
    }
    case kServerQuestion: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.serverquestion_;
      }
      break;
    }
    case kServerVerdict: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.serververdict_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void MessageEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageEnvelope)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MessageEnvelope::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 4, 0, 2> MessageEnvelope::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MessageEnvelope_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .MessageEnvelope.MessageType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageEnvelope, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MessageEnvelope.MessageType type = 1;
    {PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ClientConnect clientConnect = 2;
    {PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.payload_.clientconnect_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ClientAnswer clientAnswer = 3;
    {PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.payload_.clientanswer_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ServerQuestion serverQuestion = 4;
    {PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.payload_.serverquestion_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ServerVerdict serverVerdict = 5;
    {PROTOBUF_FIELD_OFFSET(MessageEnvelope, _impl_.payload_.serververdict_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ClientConnect>()},
    {::_pbi::TcParser::GetTable<::ClientAnswer>()},
    {::_pbi::TcParser::GetTable<::ServerQuestion>()},
    {::_pbi::TcParser::GetTable<::ServerVerdict>()},
  }}, {{
  }},
};

::uint8_t* MessageEnvelope::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageEnvelope)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .MessageEnvelope.MessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  switch (payload_case()) {
    case kClientConnect: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::clientconnect(this),
          _Internal::clientconnect(this).GetCachedSize(), target, stream);
      break;
    }
    case kClientAnswer: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::clientanswer(this),
          _Internal::clientanswer(this).GetCachedSize(), target, stream);
      break;
    }
    case kServerQuestion: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::serverquestion(this),
          _Internal::serverquestion(this).GetCachedSize(), target, stream);
      break;
    }
    case kServerVerdict: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::serververdict(this),
          _Internal::serververdict(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageEnvelope)
  return target;
}

::size_t MessageEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageEnvelope)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MessageEnvelope.MessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (payload_case()) {
    // .ClientConnect clientConnect = 2;
    case kClientConnect: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.clientconnect_);
      break;
    }
    // .ClientAnswer clientAnswer = 3;
    case kClientAnswer: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.clientanswer_);
      break;
    }
    // .ServerQuestion serverQuestion = 4;
    case kServerQuestion: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.serverquestion_);
      break;
    }
    // .ServerVerdict serverVerdict = 5;
    case kServerVerdict: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.serververdict_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MessageEnvelope::_class_data_ = {
    MessageEnvelope::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MessageEnvelope::GetClassData() const {
  return &_class_data_;
}

void MessageEnvelope::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MessageEnvelope*>(&to_msg);
  auto& from = static_cast<const MessageEnvelope&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MessageEnvelope)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  switch (from.payload_case()) {
    case kClientConnect: {
      _this->_internal_mutable_clientconnect()->::ClientConnect::MergeFrom(
          from._internal_clientconnect());
      break;
    }
    case kClientAnswer: {
      _this->_internal_mutable_clientanswer()->::ClientAnswer::MergeFrom(
          from._internal_clientanswer());
      break;
    }
    case kServerQuestion: {
      _this->_internal_mutable_serverquestion()->::ServerQuestion::MergeFrom(
          from._internal_serverquestion());
      break;
    }
    case kServerVerdict: {
      _this->_internal_mutable_serververdict()->::ServerVerdict::MergeFrom(
          from._internal_serververdict());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageEnvelope::CopyFrom(const MessageEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MessageEnvelope::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MessageEnvelope::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MessageEnvelope::InternalSwap(MessageEnvelope* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MessageEnvelope::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_src_2fPackets_2eproto_getter, &descriptor_table_src_2fPackets_2eproto_once,
      file_level_metadata_src_2fPackets_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
